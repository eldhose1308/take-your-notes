{"version":3,"file":"static/js/149.de7a79de.chunk.js","mappings":"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","sources":["_modules/help/HelpDialog.js","_modules/help/MyPostsHelp.js","_modules/posts/_components/PostVisibilitySelector.js","_modules/posts/_hooks/usePostsNavigation.js","_modules/posts/_components/CreatePostButton.js","_components/DisplayStates/Empty/EmptyAuthUserPosts.js","_pages/myPosts/list/MyPostList.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Dialog from \"_components/UI/Dialog/Dialog\";\nimport Typography from \"_components/Misc/Typography/Typography\";\nimport Separator from \"_components/Misc/Separator/Separator\";\nimport useEscClose from \"_hooks/useEscClose\";\n\nconst HelpDialog = (props) => {\n    const { title, children } = props;\n    const [isHelpInfoOpen, setIsHelpInfoOpen] = useState(null);\n\n    const openHelpInfo = () => {\n        setIsHelpInfoOpen(true);\n    }\n\n    const closeHelpInfo = () => {\n        setIsHelpInfoOpen(false);\n    }\n\n    useEscClose(closeHelpInfo, isHelpInfoOpen);\n\n    if (!isHelpInfoOpen) {\n        return (\n            <span onClick={openHelpInfo} className=\"flex hover-text-info items-center cursor-pointer pl-2\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-info\"><circle cx=\"12\" cy=\"12\" r=\"10\" /><path d=\"M12 16v-4\" /><path d=\"M12 8h.01\" /></svg>\n            </span>\n        )\n    }\n\n    return (\n        <Dialog isShown={isHelpInfoOpen} hasOverlay size='xl'>\n\n            <div className=\"my-4\">\n                <div className=\"flex justify-between\">\n\n                    <Typography textVariant='h3' size='md' className='my-4 mx-4'>{title}</Typography>\n\n                    <button onClick={closeHelpInfo} type=\"button\" data-drawer-hide=\"drawer-example\" aria-controls=\"drawer-example\" className=\"text-default bg-transparent rounded-lg text-sm flex items-center justify-center mx-4\" >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-x\"><path d=\"M18 6 6 18\" /><path d=\"m6 6 12 12\" /></svg>\n                    </button>\n                </div>\n\n                <Separator className='my-2' />\n            </div>\n\n            <div className=\"mx-4 mb-4 py-4 text-sm\">\n\n                {children}\n\n            </div>\n\n        </Dialog>\n    )\n}\n\nexport default HelpDialog;","import React from \"react\";\n\nimport Separator from \"_components/Misc/Separator/Separator\";\nimport { Alerts } from '_components/UI';\nimport Typography from \"_components/Misc/Typography/Typography\";\nimport HelpDialog from \"./HelpDialog\";\n\nimport { Link } from 'react-router-dom';\nimport CLIENT_ROUTES from '_routes/clientRoutes';\n\nconst MyPostsHelp = () => {\n\n    return (\n        <HelpDialog title='Help information about My Posts'>\n            <React.Fragment>\n\n                <div className=\"mb-4\">\n\n                    <Typography size='md' className='mb-2'>Posts Information:</Typography>\n\n                    <Typography textVariant='light' size='xs'>- Public Posts: These posts are visible to everyone and can be accessed by all users.</Typography>\n                    <Typography textVariant='light' size='xs'>- Private Posts: These posts are only visible to you until they are made public.</Typography>\n                </div>\n\n                \n                <Alerts type='info'>\n                    <Typography>Heads up!</Typography>\n                    <Typography textVariant='light' size='xs'>\n                        On list of posts created by you. The faded items are posts whose category has been created but not yet approved by the admin.\n                    </Typography>\n                </Alerts>\n\n                <Separator className='my-4' />\n\n                <div className=\"mb-4\">\n\n                    <Typography size='md' className='mb-2'>Create New Category Information:</Typography>\n\n                    <Typography textVariant='light' size='xs'>- When creating a new post, you can type in the name of your desired category in the category dropdown.</Typography>\n                    <Typography textVariant='light' size='xs'>- If no existing category matches your needs, you can create a new one.</Typography>\n                    <Typography textVariant='light' size='xs'>- The new category will be submitted for admin approval. Until it's approved, it will be <b>only visible to you</b>.</Typography>\n                </div>\n\n                <Alerts type='error'>\n                    <Typography>Important!</Typography>\n                    <Typography textVariant='light' size='xs'>\n                        Posts under unverified categories will only be visible on the home page and to users once the category is verified.\n                    </Typography>\n                    <Typography textVariant='light' size='xs'>\n                        You can check the status of the category in the <Link to={CLIENT_ROUTES.MY_CATEGORY} className='text-bold underline'>my category</Link> section.\n                    </Typography>\n                </Alerts>\n\n                <Separator className='my-4' />\n\n                <div className=\"mb-4\">\n\n<Typography size='md' className='mb-2'>Managing Categories:</Typography>\n\n<Typography textVariant='light' size='xs'>- You can create and manage your categories in the <Link to={CLIENT_ROUTES.MY_CATEGORY} className='text-bold underline'>MyCategories</Link> page.</Typography>\n</div>\n\n            </React.Fragment>\n\n        </HelpDialog>\n    )\n}\n\nexport default MyPostsHelp;","import React from \"react\";\n\nimport ModeSelector from \"_components/UI/ModeSelector/ModeSelector\";\n\nimport { VISIBILITY_MODES, visibilityModes } from \"../_constants/posts\";\n\n\nconst PostVisibilitySelector = ({ currentMode, onChange }) => {\n\n    return (\n        <ModeSelector modes={visibilityModes} onChange={onChange} selectedValue={currentMode} renderLabel />\n\n    )\n}\n\nexport default PostVisibilitySelector;","import { useNavigate } from \"react-router-dom\";\n\nconst usePostsNavigation = () => {\n    const navigate = useNavigate();\n\n    const navigateToList = () => {\n        navigate(\"/my/posts\");\n    }\n    const navigateToCreate = () => {\n        navigate(\"create\");\n    }\n    const navigateToEdit = (id) => {\n        navigate(\"edit/\" + id);\n    }\n\n    return {\n        navigateToList,\n        navigateToCreate,\n        navigateToEdit\n    }\n}\n\nexport default usePostsNavigation","import React from \"react\";\n\nconst CreatePostButton = ({ onCreate=()=>{} }) => {\n\n    return (\n        <div onClick={onCreate} className=\"bg-accent border border-accent hover-text-default hover-border-accent hover-transparent text-custom text-sm p-1 px-2 cursor-pointer rounded-md\">\n            <span className=\"flex\">\n                Start Writing\n                <span className=\"flex items-center ml-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-circle-plus\"><circle cx=\"12\" cy=\"12\" r=\"10\" /><path d=\"M8 12h8\" /><path d=\"M12 8v8\" /></svg>\n                </span>\n            </span>\n        </div>\n    )\n}\n\nexport default CreatePostButton;","import React from \"react\";\n\nimport Typography from \"_components/Misc/Typography/Typography\";\n\nconst EmptyAuthUserPosts = (props) => {\n    const { children } = props;;\n\n    return (\n        <div className='flex flex-col w-full items-center my-12'>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"120\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" class=\"lucide lucide-folder-open\"><path d=\"m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2\" /></svg>\n            <div className=\"flex flex-col items-center my-4 text-center\">\n                <Typography size='lg' type='h2'>Hmm...</Typography>\n                <Typography variant='secondary' size='sm' textVariant='default'>Nothing Here... Yet.</Typography>\n                <Typography variant='secondary' size='sm' textVariant='default'>Everyone starts somewhere. You should post something !!</Typography>\n            </div>\n            <div className=\"flex flex-col items-center my-4 text-center\">\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default EmptyAuthUserPosts;","import React, { useEffect, useState } from 'react'\n\nimport Typography from \"_components/Misc/Typography/Typography\";\nimport PostListItem from '_modules/posts/_components/list/PostListItem';\nimport PostVisibilitySelector from '_modules/posts/_components/PostVisibilitySelector';\nimport { VISIBILITY_MODES } from '_modules/posts/_constants/posts';\nimport CreatePostButton from '_modules/posts/_components/CreatePostButton';\nimport PostCategory from '_modules/posts/_components/PostCategory';\nimport usePostsNavigation from '_modules/posts/_hooks/usePostsNavigation';\nimport useMyPosts from '_modules/posts/_hooks/useMyPosts';\nimport useShowMorePagination from '_components/Pagination/_hooks/useShowMorePagination';\nimport ShowMorePaginationWrapper from '_components/Pagination/ShowMorePaginationWrapper';\nimport { stringifyJSON } from '_utils/json';\nimport PostFilters from '_modules/posts/_components/PostFilters';\nimport EmptyAuthUserPosts from '_components/DisplayStates/Empty/EmptyAuthUserPosts';\nimport { Link } from 'react-router-dom';\nimport CLIENT_ROUTES from '_routes/clientRoutes';\nimport { Alerts } from '_components/UI';\nimport MyPostsHelp from '_modules/help/MyPostsHelp';\nimport PostList from '_modules/posts/_components/list/PostList';\n\nconst pageSize = 30;\n\nconst MyPostList = (props) => {\n    const { navigateToCreate, navigateToEdit } = usePostsNavigation();\n\n    const { currentPage, isAllDataFetched, incrementPagination, checkIfAllDataFetched, resetPagination } = useShowMorePagination({ pageSize });\n    const { fetchStatus, fetchMyPostsData } = useMyPosts();\n\n    const [filters, setFilters] = useState({ visibility: 'public' });\n    const [data, setData] = useState([]);\n\n    const { hasFollowButton = true, onEdit } = props;\n    const [currentVisibilityMode, setCurrentVisibilityMode] = useState(VISIBILITY_MODES.public)\n\n\n    const handleFiltersChange = async (newFilters) => {\n        const postFilters = { ...filters, ...newFilters };\n        setFilters(postFilters);\n        setData([]);\n        resetPagination();\n        const postsFilter = { page: 1, limit: pageSize, ...postFilters };\n        try {\n            const posts = await fetchMyPostsData(postsFilter);\n            checkIfAllDataFetched(posts);\n            setData(posts);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const fetchMyPosts = async () => {\n        const postsFilter = { page: currentPage + 1, limit: pageSize, ...filters };\n\n        try {\n            const posts = await fetchMyPostsData(postsFilter);\n            setData((previousPosts) => [...previousPosts, ...posts]);\n            incrementPagination();\n            checkIfAllDataFetched(posts);\n            return posts;\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    useEffect(() => {\n        fetchMyPosts();\n    }, [])\n\n\n    const handleCreate = () => {\n        navigateToCreate();\n    }\n\n\n    const handleVisibilityModeChange = (newMode) => {\n        setCurrentVisibilityMode(newMode);\n        handleFiltersChange({ visibility: newMode });\n    }\n    const handlePostCategoryChange = (id, option, categoryValue) => {\n        handleFiltersChange({ category: categoryValue });\n    }\n\n\n    return (\n        <React.Fragment>\n            <div className=\"text-default m-5\">\n\n                <div className=\"flex\">\n                    <div className='flex justify-between w-full'>\n                        <div className=\"flex flex-col mx-2 my-2\">\n                        <Typography size='lg' type='h2' className='flex'>Your Posts\n                              <MyPostsHelp />\n                            </Typography>\n                            <Typography variant='secondary' size='sm' textVariant='default'>\n                                List of all the posts published by you\n                            </Typography>\n                        </div>\n                        <div className=\"flex flex-col my-2\">\n                            <CreatePostButton onCreate={handleCreate} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className='flex'>\n                    <div className='flex justify-between w-full'>\n                        <div className='flex my-2'>\n\n                            <PostFilters onChange={handleFiltersChange} />\n                            <div className='content-center'>\n                                <PostCategory onChange={handlePostCategoryChange} hasAddOption={false} />\n                            </div>\n                        </div>\n\n\n                        <div className='m-2'>\n                            <div className='content-center mx-2'>\n                                <PostVisibilitySelector onChange={handleVisibilityModeChange} currentMode={currentVisibilityMode} />\n                            </div>\n                        </div>\n                    </div>\n\n\n\n                </div>\n\n                <ShowMorePaginationWrapper key={`posts_${stringifyJSON(filters)}`} initialFetchStatus={fetchStatus} isEmpty={fetchStatus === 'empty'} currentPage={currentPage} isAllDataFetched={isAllDataFetched} fetchDataMethod={fetchMyPosts}>\n\n                    {(fetchStatus !== 'empty') ? (\n                        <div className='flex content-start w-full'>\n                            <PostList posts={data} />\n                            {/* <React.Fragment>\n                                {data.map(postItem => <PostListItem key={postItem.id} postItem={postItem} onEdit={navigateToEdit} hasFollowButton={hasFollowButton} />)}\n                            </React.Fragment> */}\n                        </div>\n                    ) : (\n                        <EmptyAuthUserPosts>\n                            <CreatePostButton onCreate={handleCreate} />\n                        </EmptyAuthUserPosts>\n                    )}\n\n                </ShowMorePaginationWrapper>\n            </div>\n\n        </React.Fragment>\n    )\n}\n\nexport default MyPostList;"],"names":["props","title","children","isHelpInfoOpen","setIsHelpInfoOpen","useState","openHelpInfo","closeHelpInfo","useEscClose","_jsxs","Dialog","isShown","hasOverlay","size","className","_jsx","Typography","textVariant","onClick","type","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Separator","cx","cy","r","MyPostsHelp","HelpDialog","React","Alerts","Link","to","CLIENT_ROUTES","MY_CATEGORY","_ref","currentMode","onChange","ModeSelector","modes","visibilityModes","selectedValue","renderLabel","usePostsNavigation","navigate","useNavigate","navigateToList","navigateToCreate","navigateToEdit","id","onCreate","class","variant","currentPage","isAllDataFetched","incrementPagination","checkIfAllDataFetched","resetPagination","useShowMorePagination","pageSize","fetchStatus","fetchMyPostsData","useMyPosts","filters","setFilters","visibility","data","setData","hasFollowButton","onEdit","currentVisibilityMode","setCurrentVisibilityMode","VISIBILITY_MODES","public","handleFiltersChange","async","postFilters","newFilters","postsFilter","page","limit","posts","err","console","log","fetchMyPosts","previousPosts","useEffect","handleCreate","CreatePostButton","PostFilters","PostCategory","handlePostCategoryChange","option","categoryValue","category","hasAddOption","PostVisibilitySelector","newMode","ShowMorePaginationWrapper","initialFetchStatus","isEmpty","fetchDataMethod","PostList","EmptyAuthUserPosts","concat","stringifyJSON"],"sourceRoot":""}