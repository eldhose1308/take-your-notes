{"version":3,"file":"static/js/994.5a1c7c55.chunk.js","mappings":"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","sources":["_components/Pagination/ShowMorePaginationWrapper.js","_components/Pagination/_hooks/useShowMorePagination.js","_components/State/Empty.js","_components/State/Failure.js","_components/State/UnAuthorised.js","_components/UI/ShareButton/ShareButton.js","_utils/helpers.js","_utils/shareContent.js","_modules/postCategories/_components/PostCategoryBadge.js","_modules/posts/_components/FormattedTimestamp.js","_modules/posts/_components/PostFilters.js","_modules/posts/_components/list/PostListItem.js","_modules/posts/_constants/postReducerActionTypes.js","_modules/posts/_constants/posts.js","_modules/posts/_hooks/usePostsReducer.js","_modules/posts/_hooks/useMyPosts.js","_modules/users/_component/UserInfo.js","_modules/users/_component/UserProfileInfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Failure from \"_components/State/Failure\";\nimport UnAuthorised from \"_components/State/UnAuthorised\";\nimport Empty from \"_components/State/Empty\";\n\n\nconst buttonStateValues = {\n    none: 'Show More',\n    loading: 'Fetching data',\n    failure: 'Failed to fetch',\n    success: 'Show More',\n}\n\nconst ShowMorePaginationWrapper = (props) => {\n    const { UnauthorisedState=UnAuthorised, EmptyState=Empty, FailureState=Failure, fetchDataMethod, initialFetchStatus = 'none', pageSize = 10, isEmpty = false, currentPage = 1, isAllDataFetched = false, initialData = [], children } = props;\n\n    // const [currentPage, setCurrentPage] = useState(initialPage);\n    // const [data, setData] = useState(initialData || []);\n    // const [isAllDataFetched, setAllDataFetched] = useState(false);\n\n    const [fetchStatus, setFetchStatus] = useState(initialFetchStatus);\n    // use lru for caching the results so that memory doesnt become full\n\n    useEffect(() => {\n        setFetchStatus(initialFetchStatus);\n    }, [initialFetchStatus])\n\n    const fetchData = async (newPage) => {\n        setFetchStatus('loading');\n        try {\n            const response = await fetchDataMethod();\n            // setData((previousData) => [...previousData, ...response]);\n            // setAllDataFetched(response.length === 0 || response.length % pageSize !== 0);\n            setFetchStatus('success');\n            setTimeout(() => {\n                setFetchStatus('none');\n            }, 1000);\n        } catch (err) {\n            console.error(err);\n            setFetchStatus('failure');\n        }\n    }\n\n    const handleNextPage = () => {\n        // setCurrentPage(previousPage => (previousPage + 1));\n        fetchData(currentPage + 1);\n    }\n\n    if (fetchStatus === 'unauthorised') {\n        return (\n            <React.Fragment>\n                {UnauthorisedState && <UnauthorisedState />}\n            </React.Fragment>\n        )\n    }\n\n    if (fetchStatus === 'empty') {\n        return (\n            <React.Fragment>\n                {EmptyState && <EmptyState />}\n            </React.Fragment>\n        )\n    }\n\n    if (fetchStatus === 'failure') {\n        return (\n            <React.Fragment>\n                {FailureState && <FailureState />}\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {children}\n            {/* {children({ data, resetPagination, currentPage, pageSize })} */}\n            {(!isAllDataFetched) && <div className=\"flex w-full justify-center text-sm my-4 mx-2\">\n                <span onClick={handleNextPage} className=\"flex items-center mx-1 py-1 px-3 rounded-md cursor-pointer border border-accent text-custom bg-accent hover-default hover-text-default\">\n                    <span className=\"flex\">\n                        {fetchStatus === 'loading' && <svg className=\"lucide lucide-loader-circle mx-2 animate-spin\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21 12a9 9 0 1 1-6.219-8.56\" /></svg>}\n                        {buttonStateValues[fetchStatus]}\n                    </span>\n                </span>\n            </div>}\n\n        </React.Fragment>\n    )\n}\n\nexport default ShowMorePaginationWrapper;","import { useState } from \"react\";\n\nconst useShowMorePagination = (props) => {\n    const { pageSize=10 } = props || {};\n\n    const [currentPage, setCurrentPage] = useState(0);\n    const [isAllDataFetched, setAllDataFetched] = useState(false);\n\n    const incrementPagination = () => {\n        setCurrentPage(previousPage => previousPage + 1)\n    }\n\n    const resetPagination = () => {\n        setCurrentPage(1);\n        setAllDataFetched(false);   \n    }\n\n    const checkIfAllDataFetched = (data) => {\n        setAllDataFetched(data.length === 0 || data.length % pageSize !== 0);\n    }\n\n    return {\n        currentPage,\n        isAllDataFetched,\n\n        incrementPagination,\n        resetPagination,\n        checkIfAllDataFetched\n    }\n\n}\n\nexport default useShowMorePagination;","import React from \"react\";\nimport Typography from \"_components/Misc/Typography/Typography\";\n\nconst Empty = () => {\n\n    return (\n        <div className='flex flex-col w-full items-center my-12'>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"120\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" class=\"lucide lucide-folder-open\"><path d=\"m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2\" /></svg>\n            <div className=\"flex flex-col items-center my-4 text-center\">\n                <Typography size='lg' type='h2'>Hmm...</Typography>\n                <Typography variant='secondary' size='sm' textVariant='default'>It looks like there is no data present.</Typography>\n                {/* <Typography variant='secondary' size='sm' textVariant='default'>Log in to see your followers and grow your community!!</Typography> */}\n            </div>\n        </div>\n    )\n}\n\nexport default Empty;","import React from \"react\";\n\nconst Failure = () => {\n\n    return (\n        <div>\n            <span>Failed tof etch</span>\n        </div>\n    )\n}\n\nexport default Failure;","import React from \"react\";\nimport Typography from \"_components/Misc/Typography/Typography\";\n\nconst UnAuthorised = () => {\n\n    return (\n        <div className='flex flex-col w-full items-center my-12'>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"120\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" class=\"lucide lucide-shield-ban\"><path d=\"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z\" /><path d=\"m4.243 5.21 14.39 12.472\" /></svg>\n            <div className=\"flex flex-col items-center my-4 text-center\">\n                <Typography size='lg' type='h2'>Oops!</Typography>\n                <Typography variant='secondary' size='sm' textVariant='default'>It looks like you're not logged in yet.</Typography>\n                {/* <Typography variant='secondary' size='sm' textVariant='default'>Log in to see your followers and grow your community!!</Typography> */}\n            </div>\n        </div>\n    )\n}\n\nexport default UnAuthorised;","import React from \"react\";\n\nimport { useToast } from \"_contexts/ToastProvider\";\n\nimport { getBaseURL } from \"_utils/helpers\";\nimport { shareContent } from \"_utils/shareContent\";\n\nconst ShareButton = (props) => {\n    const { shareText='Share', shareDetails, messages } = props;\n    const { title, text, urlRoute } = shareDetails || {};\n    const { success='Link copied to clipboard!', error='Oops! Unable to copy the link!' } = messages || {};\n\n    const { toast } = useToast();\n\n    const handleShare = async () => {\n        const baseURL = getBaseURL();\n        try {\n            const shareType = await shareContent({ title, text , url: `${baseURL}/#${urlRoute}` });\n            if (shareType === 'clipboard') {\n                toast({\n                    heading: success,\n                    options: { position: 'top-center' }\n                }).success()\n            }\n        } catch (err) {\n            toast({\n                heading: error,\n                description: err.toString(),\n                options: { position: 'top-center' }\n            }).error()\n        }\n    };\n\n    return (\n        <div onClick={handleShare} className=\"content-center border border-another text-accent hover-accent hover-text-custom text-xs my-2 mx-1 p-2 px-2 cursor-pointer rounded-md\">\n            <span className=\"flex\">\n                <span className=\"flex items-center mr-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-share-2\"><circle cx=\"18\" cy=\"5\" r=\"3\" /><circle cx=\"6\" cy=\"12\" r=\"3\" /><circle cx=\"18\" cy=\"19\" r=\"3\" /><line x1=\"8.59\" x2=\"15.42\" y1=\"13.51\" y2=\"17.49\" /><line x1=\"15.41\" x2=\"8.59\" y1=\"6.51\" y2=\"10.49\" /></svg>\n                </span>\n                {shareText}\n            </span>\n        </div>\n    )\n}\n\nexport default ShareButton;","export const getBaseURL = () => {\n    const { protocol, host, pathname } = window.location;\n    const pathSegments = pathname.split('/').filter(segment => segment); // Split and remove empty segments\n    const basePath = pathSegments.length > 0 ? `/${pathSegments[0]}` : '';\n\n    return `${protocol}//${host}${basePath}`;\n}","export const shareContent = ({ title, text, url }) => {\n    return new Promise((resolve, reject) => {\n\n        if (navigator.share) {\n            navigator.share({ title, text, url })\n                .then(() => {\n                    resolve('share');\n                })\n                .catch(err => {\n                    console.error('@unable to copy to clipboard', err);\n                    reject()\n                });\n        } else {\n            navigator.clipboard.writeText(url)\n                .then(() => {\n                    resolve('clipboard');\n                })\n                .catch(err => {\n                    reject(err)\n                    console.error('@unable to copy to clipboard', err);\n                });\n        }\n    })\n\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Typography from \"_components/Misc/Typography/Typography\";\nimport CLIENT_ROUTES from \"_routes/clientRoutes\";\n\nconst PostCategoryBadge = (props) => {\n    const { categoryName, categorySlug } = props;\n    const categoryDetailRoute = CLIENT_ROUTES.CATEGORY_DETAIL(categorySlug);\n\n    return (\n        <Link to={categoryDetailRoute} className='bg-custom hover-default border-2 border-custom rounded-md flex cursor-pointer px-2 py-1.5 mt-2'>\n            <div className=\"flex items-center\">\n                <span className=\"flex items-center mr-2\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" class=\"lucide lucide-square-menu\"><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" /><path d=\"M7 8h10\" /><path d=\"M7 12h10\" /><path d=\"M7 16h10\" /></svg>\n                </span>\n                <Typography size='xs' type='span' textVariant='default' className='flex items-center'>{categoryName}</Typography>\n            </div>\n        </Link>\n    )\n}\n\nexport default PostCategoryBadge;","import { compareAndFormatTimes } from \"_utils/timestampUtils\";\nimport React from \"react\";\n\nconst FormattedTimestamp = ({ createdTime, updatedTime, hasEditInfo=true }) => {\n\n    const [createdTimestamp, updatedTimestamp] = compareAndFormatTimes(createdTime, updatedTime);\n\n    return (\n        <span>\n            <p className=\"text-secondary pr-3 space-y-1 text-xs\">{createdTimestamp}</p>\n            {(hasEditInfo && !!updatedTimestamp) && <p className=\"text-secondary pr-3 space-y-1 text-xxs\">[Edited] {updatedTimestamp}</p>}\n        </span>\n    )\n}\n\nexport default FormattedTimestamp;","import React from \"react\";\n\nimport Filter from \"_modules/filters/_components/Filter\";\n\nconst filterOptions = [\n    {id: 'none', text: 'None'},\n    { id: 'recent', text: 'Most Recent' }, // sort_by: desc\n    { id: 'oldest', text: 'Oldest' }, // sort_by: asc\n    { id: 'most_liked', text: 'Most Liked' }, // sort_by: likes\n    { id: 'random', text: 'Random' }, // sort_by: random\n];\n\nconst filterQueryParamMappings = {\n    recent: { sort_by: 'date', sort_order: 'desc' },\n    oldest: { sort_by: 'date', sort_order: 'asc' },\n    most_liked: { sort_by: 'likes', sort_order: 'desc' },\n    random: { sort_by: 'random' },\n}\n\nconst PostFilters = (props) => {\n    const { onChange=()=>{}, resetPagination=()=>{} } = props;\n\n    const handleFilterChange = (selectedFilter) => {\n        const { id } = selectedFilter;\n        const filterQueryParams = filterQueryParamMappings[id];\n        resetPagination();\n        onChange(filterQueryParams);\n    }\n\n    return (\n        <div className=\"flex\">\n            <Filter\n                label='Filter by'\n                onSelect={handleFilterChange}\n                options={filterOptions}\n            />\n\n            {/* <Filter\n                label='Category'\n                onSelect={() => { }}\n            /> */}\n        </div>\n    )\n}\n\nexport default PostFilters;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useToast } from \"_contexts/ToastProvider\";\n\nimport Flex from '_components/Misc/Flex/Flex';\nimport { Card, CardHeader, CardContent, CardFooter } from \"_components/Misc/Card/Card\";\nimport Typography from '_components/Misc/Typography/Typography';\nimport Separator from \"_components/Misc/Separator/Separator\";\nimport ShareButton from \"_components/UI/ShareButton/ShareButton\";\nimport UserProfileInfo from \"_modules/users/_component/UserProfileInfo\";\n\nimport { isUserDataSameAsLoggedInUser, routeBasedOnAuthorisation } from \"_utils/userAuth\";\nimport FormattedTimestamp from \"../FormattedTimestamp\";\n\nimport CLIENT_ROUTES from \"_routes/clientRoutes\";\nimport PostCategoryBadge from \"_modules/postCategories/_components/PostCategoryBadge\";\nimport { useConfirmDeleteDialog } from \"_contexts/ConfirmDeleteDialogProvider\";\nimport useMyPosts from \"_modules/posts/_hooks/useMyPosts\";\n\n\n\nconst buttonStateValues = {\n    none: 'Undo Delete',\n    loading: 'Restoring...',\n    failure: 'Failed to Restore',\n    completed: 'Restored',\n}\n\nconst PostListItem = (props) => {\n    const { postItem } = props;\n    const { postTitle, postSlug, id, content, category, user, createdAt, updatedAt } = postItem;\n    const { categoryName, categorySlug, isVerified } = category || {};\n    const { userName, fullName, avatar } = user || {};\n\n    const [isDeleted, setIsDeleted] = useState(false);\n    const [buttonStatus, setButtonStatus] = useState('none');\n\n    const { deletePost, restorePost } = useMyPosts();\n    // const { isAuthenticated } = useAuth();\n    const { confirmDelete } = useConfirmDeleteDialog();\n\n    const isCurrentUserDetail = isUserDataSameAsLoggedInUser(userName);\n    const postDetailRoute = routeBasedOnAuthorisation(userName, postSlug)\n    const postEditRoute = CLIENT_ROUTES.POST_EDIT(postSlug);\n\n\n    const handleUndoDelete = async () => {\n        setButtonStatus('loading');\n\n        try {\n            await restorePost(id);\n            setIsDeleted(false);\n            setButtonStatus('success');\n        } catch {\n            console.log('Failed to restore post');\n            setButtonStatus('failure');\n        } finally {\n            setTimeout(() => {\n                setButtonStatus('none');\n            }, 1000);\n        }\n    }\n\n    const handleDelete = async () => {\n        const isConfirmed = await confirmDelete(() => deletePost(id));\n\n        if (isConfirmed) {\n            try {\n                setIsDeleted(true);\n                return true;\n            } catch {\n                return false;\n            }\n        }\n        return false;\n    }\n\n    return (\n        <Card border='another' variant='default' rounded='md' className={`border hover-border-highlight my-2 w-full max-h-mds ${isVerified ? '' : 'opacity-50'} ${isDeleted ? 'opacity-50' : ''}`}>\n            <CardHeader>\n                <Flex justifyContent='spaceBetween' alignItems='none' className=''>\n                    <UserProfileInfo userData={user} hasFollowButton={false} />\n                    {!isVerified && <span className=\"cursor-pointer\" title=\"This category is not verified\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-clock-alert\"><path d=\"M12 6v6l4 2\" /><path d=\"M16 21.16a10 10 0 1 1 5-13.516\" /><path d=\"M20 11.5v6\" /><path d=\"M20 21.5h.01\" /></svg>\n                    </span>}\n                    {isDeleted && <span className=\"cursor-pointer\" title=\"This post is deleted\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-trash-2\"><path d=\"M3 6h18\" /><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\" /><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\" /><line x1=\"10\" x2=\"10\" y1=\"11\" y2=\"17\" /><line x1=\"14\" x2=\"14\" y1=\"11\" y2=\"17\" /></svg>\n                    </span>}\n                </Flex>\n            </CardHeader>\n\n            <CardContent>\n                <Link to={postDetailRoute} className='cursor-pointer group-hover'>\n                    <Typography type='h1' size='md' className='mb-2 w-full'>\n                        {postTitle}\n                        <span className=\"text-center ml-2 invisible group-hover-item\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-circle-chevron-right\"><circle cx=\"12\" cy=\"12\" r=\"10\" /><path d=\"m10 8 4 4-4 4\" /></svg>\n                        </span>\n                    </Typography>\n                    {/* <Typography variant='secondary' size='xs' textVariant='default'> */}\n                    {/* <span className=\"text-xs text-secondary\">\n                        Read More\n                    </span> */}\n                    {/* </Typography> */}\n                </Link>\n\n\n\n                <div className=\"flex max-w-fit text-xs\">\n                    <PostCategoryBadge categoryName={categoryName} categorySlug={categorySlug} />\n                </div>\n\n            </CardContent>\n\n\n            <CardFooter className='p-0'>\n                <div className=\"flex flex-col w-full\">\n                    {/* <div className=\"flex w-full justify-between\"> */}\n\n                    {/* <Flex justifyContent='none' alignItems='none' width='none'> */}\n\n                    {/* <div className=\"content-center border border-secondary text-accent text-xs my-2 mx-1 py-2 px-2 rounded-md\">\n                                <span className=\"flex\">\n                                    <span className=\"flex items-center mr-2\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-thumbs-up\"><path d=\"M7 10v12\" /><path d=\"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2h0a3.13 3.13 0 0 1 3 3.88Z\" /></svg>\n                                    </span>\n                                    130 likes\n                                </span>\n                            </div>\n\n\n                            <div className=\"content-center border border-secondary text-accent text-xs my-2 mx-1 py-2 px-2 rounded-md\">\n                                <span className=\"flex\">\n                                    <span className=\"flex items-center mr-2\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-thumbs-up\"><path d=\"M7 10v12\" /><path d=\"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2h0a3.13 3.13 0 0 1 3 3.88Z\" /></svg>\n                                    </span>\n                                    253 comments\n                                </span>\n                            </div> */}\n\n                    {/* <ShareButton\n                                shareDetails={{ title: postTitle, text: `Checkout this post by ${userName} about ${postTitle}`, urlRoute: postDetailRoute }}\n                            /> */}\n\n                    {/* </Flex> */}\n                    {/* <Flex justifyContent='none' alignItems='none' width='none' className='mt-2'>\n                            <div className=\"content-center border border-secondary text-accent hover-accent hover-text-custom text-xs my-2 mx-1 py-1 px-2 cursor-pointer rounded-md\">\n                                <span className=\"flex\">\n                                    <span className=\"flex items-center\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-bookmark-plus\"><path d=\"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z\" /><line x1=\"12\" x2=\"12\" y1=\"7\" y2=\"13\" /><line x1=\"15\" x2=\"9\" y1=\"10\" y2=\"10\" /></svg>\n                                    </span>\n                                </span>\n                            </div>\n                        </Flex> */}\n                    {/* </div> */}\n                    <Separator variant='another' className='my-2' />\n\n                    <FormattedTimestamp createdTime={createdAt} updatedTime={updatedAt} hasEditInfo={false} />\n\n                    {isCurrentUserDetail ? (\n                        <React.Fragment>\n                            <Separator variant='another' className='my-2' />\n                            <div className=\"flex text-xs\">\n                                <Link to={postEditRoute} className='cursor-pointer'>\n                                    <span className='flex items-center px-2 py-1 mx-2 hover-custom hover-text-primary rounded-md cursor-pointer' onClick={() => { }}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-pencil-line\"><path d=\"M12 20h9\" /><path d=\"M16.376 3.622a1 1 0 0 1 3.002 3.002L7.368 18.635a2 2 0 0 1-.855.506l-2.872.838a.5.5 0 0 1-.62-.62l.838-2.872a2 2 0 0 1 .506-.854z\" /><path d=\"m15 5 3 3\" /></svg>\n                                        <span className='pl-1'>\n                                            Edit\n                                        </span>\n                                    </span>\n                                </Link>\n\n                                {isDeleted ? (\n                                    <span onClick={buttonStatus === 'loading' ? ()=>{} : handleUndoDelete} className='flex items-center px-2 py-1 mx-2 hover-custom hover-text-info rounded-md cursor-pointer'>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-undo\"><path d=\"M3 7v6h6\" /><path d=\"M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13\" /></svg>\n                                        <span className='pl-1'>\n                                            {buttonStateValues[buttonStatus]}\n                                        </span>\n                                    </span>\n                                ) : (<span onClick={handleDelete} className='flex items-center px-2 py-1 mx-2 hover-custom hover-text-destructive rounded-md cursor-pointer'>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-trash\"><path d=\"M3 6h18\" /><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\" /><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\" /></svg>\n                                    <span className='pl-1'>\n                                        Delete\n                                    </span>\n                                </span>)}\n                            </div>\n                        </React.Fragment>\n\n                    ) : null}\n\n                </div>\n            </CardFooter>\n\n        </Card>\n    )\n}\n\nexport default PostListItem;","export const POST_ACTIONS = {\n    SET_FIELDS: 'SET_FIELDS',\n    SET_TAGS: 'SET_TAGS',\n    SET_VISIBILITY: 'SET_VISIBILITY',\n    SET_CONTENT: 'SET_CONTENT',\n    SET_TITLE: 'SET_TITLE',\n    SET_CATEGORY: 'SET_CATEGORY',\n    RESET_FORM: 'RESET_FORM',\n};\n","export const VISIBILITY_MODES = {\n    private: 'private',\n    public: 'public'\n}\n\nexport const visibilityModes = [\n    { id: VISIBILITY_MODES.private, label: 'Private', modeElement: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-eye-off\"><path d=\"M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49\"/><path d=\"M14.084 14.158a3 3 0 0 1-4.242-4.242\"/><path d=\"M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143\"/><path d=\"m2 2 20 20\"/></svg> },\n    { id: VISIBILITY_MODES.public, label: 'Public', modeElement: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-eye\"><path d=\"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg> },\n]\n\nexport const EMPTY_POST_TITLE = 'My First Post';","import { VISIBILITY_MODES, EMPTY_POST_TITLE } from \"../_constants/posts\";\nimport { POST_ACTIONS } from \"../_constants/postReducerActionTypes\";\n\nexport const initialState = {\n    postTags: [],\n    currentVisibilityMode: VISIBILITY_MODES.public,\n    postTitle: EMPTY_POST_TITLE,\n    postCategory: null,\n    markdownContent: '',\n};\n\n\nconst postFormReducer = (state, { type, payload }) => {\n    switch (type) {\n        case POST_ACTIONS.SET_FIELDS:\n            return { ...state, ...payload };\n        case POST_ACTIONS.SET_TAGS:\n            return { ...state, postTags: payload };\n        case POST_ACTIONS.SET_VISIBILITY:\n            return { ...state, currentVisibilityMode: payload };\n        case POST_ACTIONS.SET_CONTENT:\n            return { ...state, markdownContent: payload };\n        case POST_ACTIONS.SET_TITLE:\n            return { ...state, postTitle: payload };\n        case POST_ACTIONS.SET_CATEGORY:\n            return { ...state, postCategory: payload };\n        case POST_ACTIONS.RESET_FORM:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default postFormReducer\n","import { useState, useEffect, useContext, useCallback, useReducer } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useSearchParams } from \"react-router-dom\";\n\nimport * as posts from \"_services/posts.service\";\nimport * as postsService from '_services/posts.service';\nimport * as categoriesService from '_services/postsCategories.service';\n\nimport postFormReducer, { initialState } from \"./usePostsReducer\";\nimport { PostsContext } from \"_contexts/PostsContext\";\nimport { POST_ACTIONS } from \"../_constants/postReducerActionTypes\";\nimport { useToast } from \"_contexts/ToastProvider\";\nimport { getUserDetailsOfCurrentUser } from \"_utils/userAuth\";\nimport useAuth from \"_hooks/useAuth\";\n\nconst useMyPosts = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const { id: postSlug } = useParams();\n    // const { postDetails, postsList, categoriesList: postsCategoriesList, selectedCategory, setSelectedCategory, setPostsList } = useContext(PostsContext);\n    const { toast } = useToast()\n    const { logout } = useAuth();\n\n    // const selectedCategory = searchParams.get('category');\n    const [postFormState, postFormDispatcher] = useReducer(postFormReducer, { ...initialState });\n    // const [postFormState, postFormDispatcher] = useReducer(postFormReducer, { ...initialState, postCategory: selectedCategory });\n    const [fetchStatus, setFetchStatus] = useState('none');\n\n    const fetchMyPostsData = async (filters) => {\n        try{\n            setFetchStatus('loading');\n            const postsData = await postsService.getAuthPosts(filters);\n            if(postsData.length === 0){\n                setFetchStatus('empty');\n            }else{\n                setFetchStatus('success');\n                setTimeout(() => {\n                    setFetchStatus('none');\n                }, 1000);\n            }\n            return postsData;\n        }catch(error){\n            const { statusCode } = error;\n            if(statusCode === 401){\n                logout()\n            }\n            setFetchStatus('failure');\n            throw error;\n        }\n    }\n\n    const fetchCategoriesData = async (filters) => {\n        try{\n            setFetchStatus('loading');\n            const categoriesData = await categoriesService.getPostsCategories();\n            setFetchStatus('success');\n            setTimeout(() => {\n                setFetchStatus('none');\n            }, 1000);\n            return categoriesData;\n        }catch(error){\n            setFetchStatus('failure');\n        }\n    };\n\n\n    const createPost = useCallback(async (payload) => {\n        try {\n            const postsResponse = await posts.savePost(payload);\n            // const newPostListForState = [...postsList, postsResponse];\n            // setPostsList(newPostListForState);\n            toast({\n                heading: 'Post created successfully!',\n                description: 'Your post has been successfully published!',\n                options: { position: 'top-right' }\n            }).success()\n            return postsResponse;\n        } catch (error) {\n            const { message, statusCode } = error;\n            if(statusCode === 401){\n                logout()\n            }\n            toast({\n                heading: 'Oops! There was an error creating your post.',\n                description: message,\n                options: { position: 'top-right' }\n            }).error()\n            return false;\n        }\n    }, []);\n\n    const updatePost = useCallback(async (payload, id) => {\n        try {\n            const postsResponse = await posts.updatePost(payload, id);\n            // const newPostListForState = postsList.map(item => {\n            //     if (item.id === id) {\n            //         return { id, ...postsResponse };\n            //     }\n            //     return item;\n            // });\n            // setPostsList(newPostListForState);\n            toast({\n                heading: 'Post updated successfully!',\n                description: 'Your post has been successfully updated!',\n                options: { position: 'top-right' }\n            }).success()\n            return postsResponse;\n        } catch (error) {\n            const { message } = error;\n            toast({\n                heading: 'Oops! There was an error updating your post.',\n                description: message,\n                options: { position: 'top-right' }\n            }).error()\n            return false;\n        }\n    }, []);\n\n    const deletePost = useCallback(async (id) => {\n        try {\n            const postsResponse = await posts.deletePost(id);\n            toast({\n                heading: 'Post deleted successfully!',\n                description: 'Your post has been successfully deleted!',\n                options: { position: 'top-right' }\n            }).success()\n            return postsResponse;\n        } catch (error) {\n            const { message, statusCode } = error;\n            if(statusCode === 401){\n                logout()\n            }\n            toast({\n                heading: 'Oops! There was an error deleting your post.',\n                description: message,\n                options: { position: 'top-right' }\n            }).error()\n            throw error;\n            // return false;\n        }\n    }, []);\n\n    const restorePost = useCallback(async (id) => {\n        try {\n            const postsResponse = await posts.restorePost(id);\n            toast({\n                heading: 'Post restored successfully!',\n                description: 'Your post has been successfully restored!',\n                options: { position: 'top-right' }\n            }).success()\n            return postsResponse;\n        } catch (error) {\n            const { message } = error;\n            toast({\n                heading: 'Oops! There was an error restoring your post.',\n                description: message,\n                options: { position: 'top-right' }\n            }).error()\n            throw error;\n            // return false;\n        }\n    }, []);\n\n\n    const validatePostForm = (postPayload) => {\n        const { postTags, currentVisibilityMode, postCategory, postTitle, markdownContent } = postPayload;\n        if (!postCategory) {\n            return [true, 'Category is missing'];\n        }\n        if (!currentVisibilityMode) {\n            return [true, 'Post Visibility Mode is missing'];\n        }\n        if (!postTitle) {\n            return [true, 'Post Title is missing'];\n        }\n        if (!markdownContent) {\n            return [true, 'Post content is missing'];\n        }\n\n        return [false, ''];\n    }\n\n\n    const savePost = async () => {\n        const [error, message] = validatePostForm(postFormState);\n        if(error){\n            toast({\n                heading: 'Oops! Please verify the changes.',\n                description: message,\n                options: { position: 'top-right' }\n            }).error()\n            return;\n        }\n\n        const { postId, postTags, currentVisibilityMode, postCategory, postTitle, markdownContent } = postFormState;\n\n        // validate\n\n        const postPayload = {\n            category: postCategory.id,\n            content: markdownContent,\n            post_title: postTitle,\n            visibility: currentVisibilityMode\n        }\n        return postSlug ? updatePost(postPayload, postId) : createPost(postPayload);\n    }\n\n    const fetchUsersPostItem = async () => {\n        if (!postSlug) {\n            return\n        }\n        \n        const { userName } = getUserDetailsOfCurrentUser();\n        try {\n\n            setFetchStatus('loading');\n            const usersPostData = await postsService.getPostBySlug({ userName, postSlug });\n            const { id: postId, category, content, postTitle, visibility, user } = usersPostData || {};\n            const { categoryId, categoryName, categorySlug } = category || {};\n            const { fullName, avatar } = user || {};\n\n            const payload = { postId, markdownContent: content, postTitle, currentVisibilityMode: visibility, postCategory: { id: categoryId, categoryName, categorySlug, value: categorySlug } };\n\n            postFormDispatcher({ type: POST_ACTIONS.SET_FIELDS, payload });\n\n            setFetchStatus('success');\n        } catch (error) {\n            setFetchStatus('failure');\n        }\n    }\n\n    useEffect(() => {\n\n\n        // fetchUsersPostItem();\n    }, [postSlug])\n\n    return {\n        // postDetails,\n        // selectedCategory,\n        // setSelectedCategory,\n        // posts: postsList,\n        // categories: postsCategoriesList,\n        fetchCategoriesData,\n        fetchMyPostsData,\n        fetchUsersPostItem,\n\n        savePost,\n        deletePost,\n        restorePost,\n        \n        postFormState,\n        postFormDispatcher,\n        fetchStatus\n    };\n}\n\nexport default useMyPosts;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Avatar from \"_components/UI/Avatar/Avatar\";\nimport CLIENT_ROUTES from \"_routes/clientRoutes\";\n\nconst UserInfo = (props) => {\n    const { userData, hasFollowers = false } = props;\n    const { fullName, userName, avatar, followers=0 } = userData || {};\n\n    const userDetailRoute = CLIENT_ROUTES.USER_DETAIL(userName);\n\n    return (\n        <Link to={userDetailRoute} className='cursor-pointer group-hover'>\n            <div className=\"flex items-center mb-2\">\n            <div className=\"flex\">\n                <Avatar key={avatar} name={fullName} src={avatar} />\n                </div>\n                <div className=\"flex flex-col\">\n                    <div className=\"flex items-center\">\n                        <div className=\"flex flex-col justify-center\">\n                            <div className=\"flex\">\n                                <h3 className=\"text-sm text-default px-3\">{fullName}</h3>\n                                <span className=\"text-center ml-1 mr-4 invisible group-hover-item\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-circle-chevron-right\"><circle cx=\"12\" cy=\"12\" r=\"10\" /><path d=\"m10 8 4 4-4 4\" /></svg>\n                                </span>\n                            </div>\n                            {hasFollowers && <p className=\"text-secondary px-3 space-y-1 text-xs\">{followers} followers</p>}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default UserInfo;","import React, { useState } from \"react\";\n\nimport UserInfo from \"./UserInfo\";\nimport FollowButton from \"./FollowButton\";\nimport { isUserDataSameAsLoggedInUser } from \"_utils/userAuth\";\n\nconst UserProfileInfo = (props) => {\n    const { userData, hasFollowers=false, hasFollowButton=true } = props;\n    const [userState, setUserState] = useState(userData);\n\n    const { userName, userId, isFollowing } = userState || {};\n    const isCurrentUserDetail = isUserDataSameAsLoggedInUser(userName);\n\n    const handleFollowUser = async () => {\n        setUserState(previousUserState => ({ ...previousUserState, followers: Number(previousUserState.followers) + 1, isFollowing: !previousUserState.isFollowing }));\n        // chnge state of userData's followers count + 1 on success of api call. (disable button on click with status)\n    }\n\n    const handleUnFollowUser = async () => {\n        setUserState(previousUserState => ({ ...previousUserState, followers: Number(previousUserState.followers) - 1, isFollowing: !previousUserState.isFollowing }));\n        // chnge state of userData's followers count - 1 on success of api call. (disable button on click with status)\n    }\n\n    return (\n        <React.Fragment>\n            <UserInfo userData={userState} hasFollowers={hasFollowers} />\n            {(hasFollowButton && !isCurrentUserDetail) &&\n                <FollowButton userName={userName} userId={userId} isFollowing={isFollowing} onFollow={handleFollowUser} onUnFollow={handleUnFollowUser} />}\n        </React.Fragment>\n    )\n}\n\nexport default UserProfileInfo;"],"names":["buttonStateValues","none","loading","failure","success","props","UnauthorisedState","UnAuthorised","EmptyState","Empty","FailureState","Failure","fetchDataMethod","initialFetchStatus","pageSize","isEmpty","currentPage","isAllDataFetched","initialData","children","fetchStatus","setFetchStatus","useState","useEffect","_jsx","React","_jsxs","className","onClick","handleNextPage","async","setTimeout","err","console","error","fetchData","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","setCurrentPage","setAllDataFetched","incrementPagination","previousPage","resetPagination","checkIfAllDataFetched","data","length","class","Typography","size","type","variant","textVariant","shareText","shareDetails","messages","title","text","urlRoute","toast","useToast","baseURL","getBaseURL","protocol","host","pathname","window","location","pathSegments","split","filter","segment","basePath","concat","shareType","_ref","url","Promise","resolve","reject","navigator","share","then","catch","clipboard","writeText","shareContent","heading","options","position","description","toString","cx","cy","r","x1","x2","y1","y2","categoryName","categorySlug","categoryDetailRoute","CLIENT_ROUTES","CATEGORY_DETAIL","Link","to","x","y","rx","createdTime","updatedTime","hasEditInfo","createdTimestamp","updatedTimestamp","compareAndFormatTimes","filterOptions","id","filterQueryParamMappings","recent","sort_by","sort_order","oldest","most_liked","random","onChange","Filter","label","onSelect","selectedFilter","filterQueryParams","completed","postItem","postTitle","postSlug","content","category","user","createdAt","updatedAt","isVerified","userName","fullName","avatar","isDeleted","setIsDeleted","buttonStatus","setButtonStatus","deletePost","restorePost","useMyPosts","confirmDelete","useConfirmDeleteDialog","isCurrentUserDetail","isUserDataSameAsLoggedInUser","postDetailRoute","routeBasedOnAuthorisation","postEditRoute","POST_EDIT","Card","border","rounded","CardHeader","Flex","justifyContent","alignItems","UserProfileInfo","userData","hasFollowButton","CardContent","PostCategoryBadge","CardFooter","Separator","FormattedTimestamp","log","POST_ACTIONS","SET_FIELDS","SET_TAGS","SET_VISIBILITY","SET_CONTENT","SET_TITLE","SET_CATEGORY","RESET_FORM","VISIBILITY_MODES","private","public","visibilityModes","modeElement","EMPTY_POST_TITLE","initialState","postTags","currentVisibilityMode","postCategory","markdownContent","postFormReducer","state","payload","searchParams","setSearchParams","useSearchParams","useParams","logout","useAuth","postFormState","postFormDispatcher","useReducer","createPost","useCallback","postsResponse","posts","message","statusCode","updatePost","fetchCategoriesData","categoriesData","categoriesService","fetchMyPostsData","postsData","postsService","filters","fetchUsersPostItem","getUserDetailsOfCurrentUser","usersPostData","postId","visibility","categoryId","value","savePost","postPayload","validatePostForm","post_title","hasFollowers","followers","userDetailRoute","USER_DETAIL","Avatar","name","src","userState","setUserState","userId","isFollowing","UserInfo","FollowButton","onFollow","previousUserState","Number","onUnFollow"],"sourceRoot":""}