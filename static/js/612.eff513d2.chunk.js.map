{"version":3,"file":"static/js/612.eff513d2.chunk.js","mappings":"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","sources":["_components/DisplayStates/Empty/EmptySubscribersUsers.js","_pages/subscribers/MySubscribersPage.js"],"sourcesContent":["import React from \"react\";\n\nimport Typography from \"_components/Misc/Typography/Typography\";\nimport { Link } from \"react-router-dom\";\nimport CLIENT_ROUTES from \"_routes/clientRoutes\";\n\n\nconst marginSizes = {\n    'sm': 'my-4',\n    'md': 'my-12',\n}\n\nconst EmptySubscribersUsers = (props) => {\n    const { size = 'md' } = props;\n\n    return (\n        <div className={`flex flex-col w-full items-center ${marginSizes[size]}`}>\n            {size === 'md' &&\n                <React.Fragment>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"120\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" class=\"lucide lucide-folder-open\"><path d=\"m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2\" /></svg>\n                    <div className=\"flex flex-col items-center my-4 text-center\">\n                        <Typography size='lg' type='h2'>Looks Like It's Quiet Here!</Typography>\n                        <Typography variant='secondary' size='sm' textVariant='default'>You don't have any subscribers yet</Typography>\n                        <Typography variant='secondary' size='sm' textVariant='default'>Create great content and share it to grow your audience!</Typography>\n                    </div>\n\n                    <div>\n\n                        <Link to={CLIENT_ROUTES.POST_CREATE} className=\"text-xs py-2 px-2 border-2 border-custom text-default border border-secondary hover-custom hover-text-accent flex justify-center rounded-md w-full cursor-pointer\">\n                                Start creating\n                            <span className='flex ml-2'>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-move-right animate-bounce-x\"><path d=\"M18 8L22 12L18 16\"/><path d=\"M2 12H22\"/></svg>\n                            </span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            }\n\n            {size === 'sm' &&\n                <React.Fragment>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" class=\"lucide lucide-folder-open\"><path d=\"m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2\" /></svg>\n                    <div className=\"flex flex-col items-center my-4 text-center\">\n                        <Typography size='md' type='h2'>Looks Like It's Quiet Here!</Typography>\n                        <Typography variant='secondary' size='xs' textVariant='default'>No subscribers yet.</Typography>\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default EmptySubscribersUsers;","import React, { useEffect, useState } from \"react\";\n\nimport UserFilters from \"_modules/users/_component/UserFilters\";\nimport ShowMorePaginationWrapper from \"_components/Pagination/ShowMorePaginationWrapper\";\nimport Typography from \"_components/Misc/Typography/Typography\";\n\nimport UsersSubscriptionUnAuthorised from \"_components/DisplayStates/Error/UsersSubscriptionUnAuthorised\";\nimport EmptySubscribersUsers from \"_components/DisplayStates/Empty/EmptySubscribersUsers\";\n\nimport UsersListSuccess from \"_pages/users/states/UsersListSuccess\";\n\nimport useUsers from \"_modules/users/_hooks/useUsers\";\nimport useShowMorePagination from \"_components/Pagination/_hooks/useShowMorePagination\";\n\n\nimport { stringifyJSON } from \"_utils/json\";\n\nconst pageSize = 30;\n\nconst MySubscribersPage = () => {\n    const { fetchUsersData, fetchStatus } = useUsers();\n    const { currentPage, isAllDataFetched, incrementPagination, checkIfAllDataFetched, resetPagination } = useShowMorePagination({ pageSize });\n\n    const [filters, setFilters] = useState({ filters: 'subscriber' });\n    const [data, setData] = useState([]);\n\n    const handleFiltersChange = async (newFilters) => {\n        const userFilters = { ...filters, ...newFilters };\n        setFilters(userFilters);\n        setData([]);\n        resetPagination();\n        const usersFilter = { page: 1, limit: pageSize, ...userFilters };\n        try {\n            const users = await fetchUsersData(usersFilter);\n            checkIfAllDataFetched(users);\n            setData(users);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n\n    const fetchUsers = async () => {\n        const usersFilter = { page: currentPage + 1, limit: pageSize, ...filters };\n        try {\n\n            const users = await fetchUsersData(usersFilter);\n            setData((previousUsers) => [...previousUsers, ...users]);\n\n            incrementPagination();\n            checkIfAllDataFetched(users);\n            return users;\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    useEffect(() => {\n        fetchUsers();\n    }, [])\n\n    return (\n        <div className=\"text-default m-5\">\n            <div className=\"flex mx-8\">\n                <div className=\"flex justify-between w-full mx-4\">\n                    <Typography size='lg' type='h2'>My Subscribers</Typography>\n                </div>\n\n                <div className=\"flex justify-between w-full my-2\">\n                    <React.Fragment>\n                        <UserFilters onChange={handleFiltersChange} />\n                    </React.Fragment>\n                </div>\n            </div>\n            <div className=\"flex my-2\">\n                {/* {!(fetchStatus === 'loading' || fetchStatus === 'success'|| fetchStatus === 'none') && (CategoriesComponentState)} */}\n\n                {/* {authorisedForListing ? ( */}\n                <ShowMorePaginationWrapper EmptyState={EmptySubscribersUsers} UnauthorisedState={UsersSubscriptionUnAuthorised} key={`users_${stringifyJSON(filters)}`} isEmpty={fetchStatus !== 'success'} initialFetchStatus={fetchStatus} currentPage={currentPage} isAllDataFetched={isAllDataFetched} fetchDataMethod={fetchUsers}>\n                {/* {CategoriesComponentState} */}\n                    <UsersListSuccess usersList={data} />\n                </ShowMorePaginationWrapper>\n                {/* ) : (\n                    <FollowersUnAuthorised />\n                )} */}\n            </div>\n        </div>\n    )\n}\n\nexport default MySubscribersPage;"],"names":["marginSizes","props","size","_jsxs","className","concat","children","React","_jsx","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","class","d","Typography","type","variant","textVariant","Link","to","CLIENT_ROUTES","POST_CREATE","MySubscribersPage","fetchUsersData","fetchStatus","useUsers","currentPage","isAllDataFetched","incrementPagination","checkIfAllDataFetched","resetPagination","useShowMorePagination","pageSize","filters","setFilters","useState","data","setData","fetchUsers","async","usersFilter","page","limit","users","previousUsers","err","console","error","useEffect","UserFilters","onChange","userFilters","newFilters","ShowMorePaginationWrapper","EmptyState","EmptySubscribersUsers","UnauthorisedState","UsersSubscriptionUnAuthorised","isEmpty","initialFetchStatus","fetchDataMethod","UsersListSuccess","usersList","stringifyJSON"],"sourceRoot":""}