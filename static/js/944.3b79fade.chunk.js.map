{"version":3,"file":"static/js/944.3b79fade.chunk.js","mappings":"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","sources":["_modules/togglers/_constants/subscriptionUnsubscription.js","_modules/togglers/SubscriptionToggler.js","_components/DisplayStates/Empty/EmptySubscribedUsers.js","_pages/subscriptions/MySubscriptionsPage.js"],"sourcesContent":["export const SUBSCRIPTION_MODES = {\n    users: 'users',\n    categories: 'categories'\n}\n\nexport const followStatusModes = [\n    { id: SUBSCRIPTION_MODES.users, label: 'Users', modeElement: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-users-round\"><path d=\"M18 21a8 8 0 0 0-16 0\"/><circle cx=\"10\" cy=\"8\" r=\"5\"/><path d=\"M22 20c0-3.37-2-6.5-4-8a5 5 0 0 0-.45-8.3\"/></svg> },\n    { id: SUBSCRIPTION_MODES.categories, label: 'Categories', modeElement: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" class=\"lucide lucide-square-menu\"><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\"/><path d=\"M7 8h10\"/><path d=\"M7 12h10\"/><path d=\"M7 16h10\"/></svg> },\n];\n\n\nexport const filterQueryParamMappings = {\n    users: { filters: 'users' },\n    categories: { filters: 'categories' },\n}\n","import React from \"react\";\n\nimport ModeSelector from \"_components/UI/ModeSelector/ModeSelector\";\n\nimport { filterQueryParamMappings, followStatusModes } from \"./_constants/subscriptionUnsubscription\";\n\n\nconst currentMode = followStatusModes[0].id;\nconst SubscriptionToggler = ({ onChange }) => {\n    \n    const handleChange = (id) => {\n        const filterQueryParams = filterQueryParamMappings[id];\n        onChange(filterQueryParams);\n    }\n\n    return (\n        <ModeSelector modes={followStatusModes} onChange={handleChange} selectedValue={currentMode} renderLabel />\n\n    )\n}\n\nexport default SubscriptionToggler;","import React from \"react\";\n\nimport Typography from \"_components/Misc/Typography/Typography\";\nimport { Link } from \"react-router-dom\";\nimport CLIENT_ROUTES from \"_routes/clientRoutes\";\n\n\nconst marginSizes = {\n    'sm': 'my-4',\n    'md': 'my-12',\n}\n\nconst EmptySubscribedUsers = (props) => {\n    const { size = 'md' } = props;\n\n    return (\n        <div className={`flex flex-col w-full items-center ${marginSizes[size]}`}>\n            {size === 'md' &&\n                <React.Fragment>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"120\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" class=\"lucide lucide-folder-open\"><path d=\"m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2\" /></svg>\n                    <div className=\"flex flex-col items-center my-4 text-center\">\n                        <Typography size='lg' type='h2'>Discover, Subscribe, Enjoy!</Typography>\n                        <Typography variant='secondary' size='sm' textVariant='default'>Time to Connect with Awesome Bloggers</Typography>\n                        <Typography variant='secondary' size='sm' textVariant='default'>Subscribe to your favorite creators to get notified whenever they post!</Typography>\n                    </div>\n\n                    <div>\n\n                        <Link to={CLIENT_ROUTES.USER_LIST} className=\"text-xs py-2 px-2 border-2 border-custom text-default border border-secondary hover-custom hover-text-accent flex justify-center rounded-md w-full cursor-pointer\">\n                                Explore users\n                            <span className='flex ml-2'>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-move-right animate-bounce-x\"><path d=\"M18 8L22 12L18 16\"/><path d=\"M2 12H22\"/></svg>\n                            </span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            }\n\n            {size === 'sm' &&\n                <React.Fragment>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" class=\"lucide lucide-folder-open\"><path d=\"m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2\" /></svg>\n                    <div className=\"flex flex-col items-center my-4 text-center\">\n                        <Typography size='md' type='h2'>Discover, Subscribe, Enjoy!</Typography>\n                        <Typography variant='secondary' size='xs' textVariant='default'>No subscriptions yet.</Typography>\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default EmptySubscribedUsers;","import React, { useEffect, useState } from \"react\";\n\nimport UserFilters from \"_modules/users/_component/UserFilters\";\nimport ShowMorePaginationWrapper from \"_components/Pagination/ShowMorePaginationWrapper\";\nimport Typography from \"_components/Misc/Typography/Typography\";\nimport SubscriptionToggler from \"_modules/togglers/SubscriptionToggler\";\nimport UsersSubscriptionUnAuthorised from \"_components/DisplayStates/Error/UsersSubscriptionUnAuthorised\";\nimport EmptySubscribedUsers from \"_components/DisplayStates/Empty/EmptySubscribedUsers\";\n\nimport UsersListSuccess from \"_pages/users/states/UsersListSuccess\";\n\nimport useUsers from \"_modules/users/_hooks/useUsers\";\nimport useShowMorePagination from \"_components/Pagination/_hooks/useShowMorePagination\";\n\n\nimport { stringifyJSON } from \"_utils/json\";\n\nconst pageSize = 30;\n\nconst MySubscriptionsPage = () => {\n    const { fetchUsersData, fetchStatus } = useUsers();\n    const { currentPage, isAllDataFetched, incrementPagination, checkIfAllDataFetched, resetPagination } = useShowMorePagination({ pageSize });\n\n    const [filters, setFilters] = useState({ filters: 'users' });\n    const [data, setData] = useState([]);\n\n    const handleFiltersChange = async (newFilters) => {\n        const userFilters = { ...filters, ...newFilters };\n        if(userFilters.filters === 'users') {\n            userFilters.filters = 'subscribed';\n        }\n\n        if(userFilters.filters === 'categories') {\n            return;\n        }\n        setFilters(userFilters);\n        setData([]);\n        resetPagination();\n        const usersFilter = { page: 1, limit: pageSize, ...userFilters };\n        try {\n            const users = await fetchUsersData(usersFilter);\n            checkIfAllDataFetched(users);\n            setData(users);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n\n    const fetchUsers = async () => {\n        const usersFilter = { page: currentPage + 1, limit: pageSize, ...filters };\n        if(usersFilter.filters === 'users') {\n            usersFilter.filters = 'subscribed';\n        }\n\n        try {\n\n            const users = await fetchUsersData(usersFilter);\n            setData((previousUsers) => [...previousUsers, ...users]);\n\n            incrementPagination();\n            checkIfAllDataFetched(users);\n            return users;\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    useEffect(() => {\n        fetchUsers();\n    }, [])\n\n    return (\n        <div className=\"text-default m-5\">\n            <div className=\"flex mx-8\">\n                <div className=\"flex justify-between w-full mx-4\">\n                    <Typography size='lg' type='h2'>My Subscriptions</Typography>\n                    <div className=\"content-center mx-2\">\n                        <SubscriptionToggler onChange={handleFiltersChange} renderLabel />\n                    </div>\n                </div>\n\n                <div className=\"flex justify-between w-full my-2\">\n                    <React.Fragment>\n                        <UserFilters onChange={handleFiltersChange} />\n                    </React.Fragment>\n                </div>\n            </div>\n            <div className=\"flex my-2\">\n                {/* {!(fetchStatus === 'loading' || fetchStatus === 'success'|| fetchStatus === 'none') && (CategoriesComponentState)} */}\n\n                {/* {authorisedForListing ? ( */}\n                <ShowMorePaginationWrapper EmptyState={EmptySubscribedUsers} UnauthorisedState={UsersSubscriptionUnAuthorised} key={`users_${stringifyJSON(filters)}`} isEmpty={fetchStatus !== 'success'} initialFetchStatus={fetchStatus} currentPage={currentPage} isAllDataFetched={isAllDataFetched} fetchDataMethod={fetchUsers}>\n                {/* {CategoriesComponentState} */}\n                    <UsersListSuccess usersList={data} hasSubscribeButton />\n                </ShowMorePaginationWrapper>\n                {/* ) : (\n                    <FollowersUnAuthorised />\n                )} */}\n            </div>\n        </div>\n    )\n}\n\nexport default MySubscriptionsPage;"],"names":["SUBSCRIPTION_MODES","followStatusModes","id","label","modeElement","_jsxs","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","children","_jsx","d","cx","cy","r","class","x","y","rx","filterQueryParamMappings","users","filters","categories","currentMode","_ref","onChange","ModeSelector","modes","selectedValue","renderLabel","marginSizes","props","size","concat","React","Typography","type","variant","textVariant","Link","to","CLIENT_ROUTES","USER_LIST","MySubscriptionsPage","fetchUsersData","fetchStatus","useUsers","currentPage","isAllDataFetched","incrementPagination","checkIfAllDataFetched","resetPagination","useShowMorePagination","pageSize","setFilters","useState","data","setData","handleFiltersChange","async","userFilters","newFilters","usersFilter","page","limit","err","console","error","fetchUsers","previousUsers","useEffect","SubscriptionToggler","UserFilters","ShowMorePaginationWrapper","EmptyState","EmptySubscribedUsers","UnauthorisedState","UsersSubscriptionUnAuthorised","isEmpty","initialFetchStatus","fetchDataMethod","UsersListSuccess","usersList","hasSubscribeButton","stringifyJSON"],"sourceRoot":""}